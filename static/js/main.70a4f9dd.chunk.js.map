{"version":3,"sources":["api/users.js","api/categories.js","App.jsx","api/products.js","index.jsx"],"names":["id","name","sex","title","icon","ownerId","products","categoryId","map","product","category","categoriesFromServer","find","user","usersFromServer","App","useState","selectedUserId","setSelectedUserId","query","setQuery","selectedCategoriesId","setSelectedCategoriesId","sortField","setSortField","isReversed","setIsReversed","visibleProducts","filter","lowerCaseQuery","toLowerCase","trim","includes","length","sortBy","columnName","isFirstClick","isSecondClick","resetSorting","sort","a","b","localeCompare","reverse","className","href","onClick","classNames","type","placeholder","value","onChange","event","target","some","selectedId","isSelected","categoryToDeleteId","currentCategoriesId","categoryToAddId","current","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.70a4f9dd.chunk.js","sourcesContent":["export default [\n  { id: 1, name: 'Roma', sex: 'm' },\n  { id: 2, name: 'Anna', sex: 'f' },\n  { id: 3, name: 'Max', sex: 'm' },\n  { id: 4, name: 'John', sex: 'm' },\n];\n","export default [\n  {\n    id: 1,\n    title: 'Grocery',\n    icon: '🍞',\n    ownerId: 2,\n  },\n  {\n    id: 2,\n    title: 'Drinks',\n    icon: '🍺',\n    ownerId: 1,\n  },\n  {\n    id: 3,\n    title: 'Fruits',\n    icon: '🍏',\n    ownerId: 2,\n  },\n  {\n    id: 4,\n    title: 'Electronics',\n    icon: '💻',\n    ownerId: 1,\n  },\n  {\n    id: 5,\n    title: 'Clothes',\n    icon: '👚',\n    ownerId: 3,\n  },\n];\n","import React, { useState } from 'react';\nimport './App.scss';\nimport classNames from 'classnames';\nimport usersFromServer from './api/users';\nimport categoriesFromServer from './api/categories';\nimport productsFromServer from './api/products';\n\nfunction getCategory(categoryId) {\n  const foundCategory = categoriesFromServer.find(category => (\n    category.id === categoryId\n  ));\n\n  return foundCategory || null;\n}\n\nfunction getUser(ownerId) {\n  const foundUser = usersFromServer.find(user => user.id === ownerId);\n\n  return foundUser || null;\n}\n\nconst products = productsFromServer.map((product) => {\n  const category = getCategory(product.categoryId);\n  const user = getUser(category.ownerId);\n\n  return {\n    ...product,\n    category,\n    user,\n  };\n});\n\nexport const App = () => {\n  const [selectedUserId, setSelectedUserId] = useState(0);\n  const [query, setQuery] = useState('');\n  const [selectedCategoriesId, setSelectedCategoriesId] = useState([]);\n  const [sortField, setSortField] = useState('');\n  const [isReversed, setIsReversed] = useState(false);\n\n  let visibleProducts = [...products];\n\n  if (selectedUserId) {\n    visibleProducts = visibleProducts.filter(\n      ({ user }) => user.id === selectedUserId,\n    );\n  }\n\n  if (query) {\n    const lowerCaseQuery = query.toLowerCase().trim();\n\n    visibleProducts = visibleProducts.filter(\n      ({ name }) => name.toLowerCase().includes(lowerCaseQuery),\n    );\n  }\n\n  if (selectedCategoriesId.length) {\n    visibleProducts = visibleProducts.filter(\n      product => selectedCategoriesId.includes(product.category.id),\n    );\n  }\n\n  const selectedCategory = (categoryToAddId) => {\n    setSelectedCategoriesId(current => ([\n      ...current,\n      categoryToAddId,\n    ]));\n  };\n\n  const unselectedCategory = (categoryToDeleteId) => {\n    setSelectedCategoriesId(currentCategoriesId => currentCategoriesId\n      .filter(id => id !== categoryToDeleteId));\n  };\n\n  const isSelected = id => selectedCategoriesId\n    .some(selectedId => selectedId === id);\n\n  const clearSelection = () => {\n    setSelectedCategoriesId([]);\n  };\n\n  const handleReset = () => {\n    setSelectedUserId(0);\n    setQuery('');\n    setSelectedCategoriesId([]);\n  };\n\n  const sortBy = (columnName) => {\n    const isFirstClick = sortField !== columnName;\n    const isSecondClick = !isFirstClick && !isReversed;\n\n    setSortField(isFirstClick || isSecondClick ? columnName : '');\n    setIsReversed(isSecondClick);\n  };\n\n  const resetSorting = () => {\n    setSortField('');\n    setIsReversed(false);\n  };\n\n  if (sortField) {\n    visibleProducts.sort(\n      (a, b) => {\n        switch (sortField) {\n          case 'id':\n            return a.id - b.id;\n\n          case 'name':\n            return a[sortField].localeCompare(b[sortField]);\n\n          case 'title':\n            return a.category.title.localeCompare(b.category.title);\n\n          case 'userName':\n            return a.user.name.localeCompare(b.user.name);\n\n          default:\n            return 0;\n        }\n      },\n    );\n  }\n\n  if (isReversed) {\n    visibleProducts.reverse();\n  }\n\n  return (\n\n    <div className=\"section\">\n      <div className=\"container\">\n        <h1 className=\"title\">Product Categories</h1>\n\n        <div className=\"block\">\n          <nav className=\"panel\">\n            <p className=\"panel-heading\">Filters</p>\n\n            <p className=\"panel-tabs has-text-weight-bold\">\n              <a\n                data-cy=\"FilterAllUsers\"\n                href=\"#/\"\n                onClick={() => setSelectedUserId(0)}\n                className={classNames(\n                  { 'is-active': !selectedUserId },\n                )}\n              >\n                All\n              </a>\n\n              {usersFromServer.map(user => (\n                <a\n                  data-cy=\"FilterUser\"\n                  href=\"#/\"\n                  key={user.id}\n                  onClick={() => setSelectedUserId(user.id)}\n                  className={classNames(\n                    { 'is-active': selectedUserId === user.id },\n                  )}\n                >\n                  {user.name}\n                </a>\n              ))}\n            </p>\n\n            <div className=\"panel-block\">\n              <p className=\"control has-icons-left has-icons-right\">\n                <input\n                  data-cy=\"SearchField\"\n                  type=\"text\"\n                  className=\"input\"\n                  placeholder=\"Search\"\n                  value={query}\n                  onChange={event => setQuery(event.target.value)}\n                />\n\n                <span className=\"icon is-left\">\n                  <i className=\"fas fa-search\" aria-hidden=\"true\" />\n                </span>\n\n                {query && (\n                  <span className=\"icon is-right\">\n                    {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n                    <button\n                      data-cy=\"ClearButton\"\n                      type=\"button\"\n                      className=\"delete\"\n                      onClick={() => setQuery('')}\n                    />\n                  </span>\n                )}\n              </p>\n            </div>\n\n            <div className=\"panel-block is-flex-wrap-wrap\">\n              <a\n                href=\"#/\"\n                data-cy=\"AllCategories\"\n                className={classNames('button', 'is-success', 'mr-6',\n                  { 'is-outlined': selectedCategoriesId.length !== 0 })\n                }\n                onClick={clearSelection}\n              >\n                All\n              </a>\n\n              {categoriesFromServer.map(({ id, title }) => (\n                isSelected(id)\n                  ? (\n                    <a\n                      data-cy=\"Category\"\n                      className=\"button mr-2 my-1 is-info\"\n                      key={id}\n                      href=\"#/\"\n                      onClick={() => unselectedCategory(id)}\n                    >\n                      {title}\n                    </a>\n                  ) : (\n                    <a\n                      data-cy=\"Category\"\n                      className=\"button mr-2 my-1\"\n                      key={id}\n                      href=\"#/\"\n                      onClick={() => selectedCategory(id)}\n                    >\n                      {title}\n                    </a>\n                  )\n              ))}\n            </div>\n\n            <div className=\"panel-block\">\n              <a\n                data-cy=\"ResetAllButton\"\n                href=\"#/\"\n                className=\"button is-link is-outlined is-fullwidth\"\n                onClick={handleReset}\n              >\n                Reset all filters\n              </a>\n            </div>\n          </nav>\n        </div>\n\n        <div className=\"box table-container\">\n          {!visibleProducts.length\n            ? (\n              <p data-cy=\"NoMatchingMessage\">\n                No products matching selected criteria\n              </p>\n            )\n            : (\n              <table\n                data-cy=\"ProductTable\"\n                className=\"table is-striped is-narrow is-fullwidth\"\n              >\n                <thead>\n                  <tr>\n                    <th>\n                      <span className=\"is-flex is-flex-wrap-nowrap\">\n                        ID\n\n                        <a href=\"#/\" onClick={() => sortBy('id')}>\n                          <span className=\"icon\">\n                            <i\n                              data-cy=\"SortIcon\"\n                              className={classNames('fas', {\n                                'fa-sort': sortField !== 'id',\n                                'fa-sort-up': sortField === 'id' && !isReversed,\n                                'fa-sort-down': sortField === 'id'\n                                  && isReversed,\n                              })}\n                            />\n                          </span>\n                        </a>\n                      </span>\n                    </th>\n\n                    <th>\n                      <span className=\"is-flex is-flex-wrap-nowrap\">\n                        Product\n\n                        <a\n                          href=\"#/\"\n                          onClick={() => {\n                            resetSorting();\n                            sortBy('name');\n                          }}\n                        >\n                          <span className=\"icon\">\n                            <i\n                              data-cy=\"SortIcon\"\n                              className={classNames('fas', {\n                                'fa-sort': sortField !== 'name',\n                                'fa-sort-up': sortField === 'name'\n                                  && !isReversed,\n                                'fa-sort-down': sortField === 'name'\n                                  && isReversed,\n                              })}\n                            />\n                          </span>\n                        </a>\n                      </span>\n                    </th>\n\n                    <th>\n                      <span className=\"is-flex is-flex-wrap-nowrap\">\n                        Category\n\n                        <a\n                          href=\"#/\"\n                          onClick={() => {\n                            resetSorting();\n                            sortBy('title');\n                          }}\n                        >\n                          <span className=\"icon\">\n                            <i\n                              data-cy=\"SortIcon\"\n                              className={classNames('fas', {\n                                'fa-sort': sortField !== 'title',\n                                'fa-sort-up': sortField === 'title'\n                                  && !isReversed,\n                                'fa-sort-down':\n                                  sortField === 'title'\n                                  && isReversed,\n                              })}\n                            />\n                          </span>\n                        </a>\n                      </span>\n                    </th>\n\n                    <th>\n                      <span className=\"is-flex is-flex-wrap-nowrap\">\n                        User\n\n                        <a\n                          href=\"#/\"\n                          onClick={() => {\n                            resetSorting();\n                            sortBy('userName');\n                          }}\n                        >\n                          <span className=\"icon\">\n                            <i\n                              data-cy=\"SortIcon\"\n                              className={classNames('fas', {\n                                'fa-sort': sortField !== 'userName',\n                                'fa-sort-up': sortField === 'userName'\n                                  && !isReversed,\n                                'fa-sort-down': sortField === 'userName'\n                                  && isReversed,\n                              })}\n                            />\n                          </span>\n                        </a>\n                      </span>\n                    </th>\n                  </tr>\n                </thead>\n\n                <tbody>\n                  {visibleProducts.map(({ id, name, category, user }) => (\n                    <tr data-cy=\"Product\" key={id}>\n                      <td className=\"has-text-weight-bold\" data-cy=\"ProductId\">\n                        {id}\n                      </td>\n\n                      <td data-cy=\"ProductName\">{name}</td>\n                      <td data-cy=\"ProductCategory\">\n                        {`${category.icon} - ${category.title}`}\n                      </td>\n\n                      <td\n                        data-cy=\"ProductUser\"\n                        className={classNames({\n                          'has-text-link': user.sex === 'm',\n                          'has-text-danger': user.sex === 'f',\n                        })}\n\n                      >\n                        {user.name}\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            )\n          }\n        </div>\n      </div>\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Milk',\n    categoryId: 2,\n  },\n  {\n    id: 2,\n    name: 'Bread',\n    categoryId: 1,\n  },\n  {\n    id: 3,\n    name: 'Eggs',\n    categoryId: 1,\n  },\n  {\n    id: 4,\n    name: 'Jacket',\n    categoryId: 5,\n  },\n  {\n    id: 5,\n    name: 'Sugar',\n    categoryId: 1,\n  },\n  {\n    id: 6,\n    name: 'Banana',\n    categoryId: 3,\n  },\n  {\n    id: 7,\n    name: 'Beer',\n    categoryId: 2,\n  },\n  {\n    id: 8,\n    name: 'Socks',\n    categoryId: 5,\n  },\n  {\n    id: 9,\n    name: 'Apples',\n    categoryId: 3,\n  },\n];\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}